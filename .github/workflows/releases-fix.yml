name: release-fix

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version"
        required: true

jobs:
  release-fix:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Switch to  release branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"      
          RELEASE_BRANCH="release/${{ github.event.inputs.release_version }}"

          git fetch origin
          git checkout -b $RELEASE_BRANCH

  lint:
    needs: [release-fix]
    name: Run lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: npm ci
      - run: npm run lint

  test:
    needs: [release-fix]
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: npm ci
      - run: npm run test

  build_docker_image:
    needs: [test, lint]
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Yandex cloud auth
        run: docker login --username oauth --password ${{ secrets.YA_CR_OAUTH_TOKEN }} cr.yandex

      - name: Build docker image
        run: docker build . -t cr.yandex/${{ secrets.YA_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}

      - name: Tag docker image
        run: |
          docker tag cr.yandex/${{ secrets.YA_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }} cr.yandex/${{ secrets.YA_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          docker tag cr.yandex/${{ secrets.YA_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }} cr.yandex/${{ secrets.YA_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: Push docker image
        run: |
          docker push cr.yandex/${{ secrets.YA_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          docker push cr.yandex/${{ secrets.YA_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

  create_github_tag:
    name: Create github tag
    runs-on: ubuntu-latest
    needs: [build_docker_image]
    steps:
      - uses: actions/checkout@v4

      - name: Create github tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          TAG_NAME="v${{ github.event.inputs.release_version }}_fix${{ github.run_number }}"

          git tag -a $TAG_NAME -m "Tag created by GitHub Actions"
          git push origin $TAG_NAME

  create_github_issue:
    runs-on: ubuntu-latest
    needs: [create_github_tag]
    steps:
      - uses: actions/checkout@v4

      - name: Get current timestam
        run: echo "date=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Get previous and latest tags
        run: |
          latest_tag=$(git tag --sort=-creatordate | sed -n '1p')
          prev_tag=$(git tag --sort=-creatordate | sed -n '2p')
          echo "latest_tag=${latest_tag}" >> $GITHUB_ENV
          echo "prev_tag=${prev_tag}" >> $GITHUB_ENV
      
      - name: Get commit history
        run: |
          if [ -n "${{ env.latest_tag }}" ]; then
            if [ -n "${{ env.prev_tag }}" ]; then
              commit_history=$(git log "${{ env.prev_tag }}"..${{ env.latest_tag }} --pretty=format:"- %h: %s")
            else
              commit_history=$(git log --pretty=format:"- %h: %s" "${{ env.latest_tag }}")
            fi
          else
            commit_history=$(git log --pretty=format:"- %h: %s")
          fi
          echo "commit_history=${commit_history}" >> $GITHUB_ENV

      - name: Create github issue
        uses: dacbd/create-issue-action@main
        
        with:
          token: ${{ github.token }}
          title: Fix ${{ github.run_number }}
          body: |
            - Date: ${{ env.date }}
            - Fix author: ${{ github.triggering_actor }}
            - Commits history:
              ${{ env.commit_history }}
            - Docker: cr.yandex/${{secrets.YC_REGISTRY_ID}}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}